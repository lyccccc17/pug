extends /layout

block beforehtml
  -
    const title = 'LINE Notify 推送訊息工具'
    const description = 'LINE Notify 推送訊息工具'

block style
  meta(name="description" content=description)
  meta(property="og:description", content=description)
  style
    :sass
      [v-cloak]
        display: none
      .alert
        white-space: pre-wrap
      textarea
        min-height: 400px

block content
  include /navbar
  #app.content.container.text-monospace(v-cloak)
    h2.py-3.m-0 LINE Notify 推送訊息工具
    .form-group
      label(for="inputCsv") CSV 網址（資料會放到參數 #[span.text-danger row]，且以第一列當作 key）
      input.form-control(type="text" id="inputCsv" v-model="s.csv")
    .row
      .col-6.col-lg-4
        .form-group
          label(for="inputStickerPackageId") StickerPackageId（#[a.btn.btn-link.p-0(href="https://developers.line.biz/media/messaging-api/sticker_list.pdf") Sticker List]）
          input.form-control(type="email" id="inputStickerPackageId" v-model="s.stickerPackageId")
      .col-6.col-lg-4
        .form-group
          label(for="inputStickerId") StickerId（#[a.btn.btn-link.p-0(href="https://developers.line.biz/media/messaging-api/sticker_list.pdf") Sticker List]）
          input.form-control(type="email" id="inputStickerId" v-model="s.stickerId")
      .col-12.col-lg-4
        .form-group 
          label(for="inputImg") 圖片連結（HTTP／HTTPS）
          input.form-control(type="text" id="inputImg" v-model="s.img")
    .form-group 
      label(for="inputMsg") 推送訊息內容（{{ s.message.length }}／1000）
      textarea.form-control(type="text" id="inputMsg" v-model="s.message" maxlength='1000')
    .alert.alert-danger.alert-dismissible.fade.show.mt-3(role="alert" v-if="errors")
      p.m-0 {{ errors }}#[br]欲了解詳細錯誤資訊，請按 F12 查看 Console
      button.close(type="button" data-dismiss="alert" aria-label="Close" @click="errors = ''")
        span(aria-hidden) &times;
    .alert.alert-success.alert-dismissible.fade.show.mt-3(role="alert" v-if="pushStatus.finish && pushStatus.total > 1")
      p.m-0 成功推送 {{ pushStatus.success }}／{{ pushStatus.total }} 筆資料
      button.close(type="button" data-dismiss="alert" aria-label="Close")
        span(aria-hidden) &times;
    button.btn.btn-danger(type="button" disabled v-if="status") {{ status }}
    button.btn.btn-danger(type="button" @click="btnPushMsg" v-else) 推送訊息
    a.btn.btn-outline-info.mx-2(type="button" href="https://notify-bot.line.me/doc/en/") Notify API 文件

block script
  script.
    const SESSION_KEY = 'pug-line-notify-push-template'
    window.vm = new Vue({
      el: '#app',
      data: {
        errors: '',
        pushStatus: {}, // 推送狀態
        status: '', // 當前狀態
        s: {
          csv: '',
          img: 'https://i.imgur.com/o0tEo3q.png',
          message: '嗨～這是傳給 ${row.name} 的預設推送訊息\n\n請自行更改訊息內容：）', // eslint-disable-line
          stickerId: 520,
          stickerPackageId: 2,
        },
      },
      mounted () {
        this.autoSaveLocalstorage()
      },
      methods: {
        autoSaveLocalstorage () {
          const session = JSON.parse(localStorage.getItem(SESSION_KEY))
          if (session) this.$set(this, 's', session)
          this.$watch('s', () => {
            localStorage.setItem(SESSION_KEY, JSON.stringify(this.s))
          }, { deep: true })
        },
        async btnPushMsg () {
          this.errors = ''
          const errors = []
          this.pushStatus = { success: 0, count: 0, total: 0, finish: false }
          try {
            const pushData = this.s

            if (!pushData.message) throw new Error('推送訊息內容不可為空')
            if (!!pushData.stickerPackageId ^ !!pushData.stickerId) throw new Error('若要推送貼圖，StickerPackageId 及 StickerId 不可為空')

            this.status = '讀取 CSV 中'
            const rows = await this.getCsv(pushData.csv)
            if (rows.length < 1) throw new Error('無法從此 CSV 內讀取資料')

            this.status = '確認推送筆數'
            const pushStatus = this.pushStatus
            pushStatus.total = rows.length
            const result = await Swal.fire({
              icon: 'warning',
              title: '準備推送訊息',
              text: `即將推送 ${pushStatus.total} 筆資料！`,
              showCancelButton: true,
              showConfirmButton: false,
              showDenyButton: true,
              cancelButtonText: '取消',
              denyButtonText: '推送',
            })
            if (!result.isDenied) throw new Error('已取消推送訊息')

            for (const row of rows) {
              try {
                pushStatus.count++
                this.status = `推送訊息中（${pushStatus.count}／${pushStatus.total}）`
                const message = _.template(pushData.message)({ row })

                await axios.post('https://us-central1-yuanchi.cloudfunctions.net/cors-anywhere', Qs.stringify({
                  message,
                  imageFullsize: pushData.img,
                  imageThumbnail: pushData.img,
                  stickerId: pushData.stickerId,
                  stickerPackageId: pushData.stickerPackageId,
                }), {
                  params: { u: 'https://notify-api.line.me/api/notify' },
                  headers: {
                    Authorization: `Bearer ${row.access_token}`,
                  },
                })
                pushStatus.success++ // 推送成功
              } catch (err) {
                err.message = _.get(err, 'response.data.message', err.message)
                if (_.get(err, 'response.data.status') === 400) throw new Error(`推送訊息格式錯誤：${err.message}`)
                errors.push(`第 ${pushStatus.count} 筆推送失敗：${err.message}`)
                console.log(err)
              }
            }
          } catch (err) {
            console.log(err)
            errors.push(_.get(err, 'message', err))
            Swal.fire({ icon: 'error', title: '推送失敗', text: _.get(err, 'message', err) })
          }
          this.status = ''
          this.errors = errors.join('\n')
          this.pushStatus.finish = true
        },
        async getCsv (url) {
          const csv = _.trim(_.get(await axios.get(url), 'data')) // _.trim：把前後多餘的空格修掉
          return _.get(Papa.parse(csv, {
            encoding: 'utf8',
            header: true,
          }), 'data', [])
        },
      },
    })
